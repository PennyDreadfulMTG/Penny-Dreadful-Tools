import pytest

from decksite import deck_name
from shared.container import Container
from shared.pd_exception import InvalidDataException

TESTDATA: list[tuple[str, str, list[str] | None, str | None, int]] = [
    ('Dimir Control', 'Dimir Control', ['U', 'B'], 'Control', 1),
    ('U/B Control', 'Dimir Control', ['U', 'B'], 'Control', 1),
    ('dimir Control', 'Dimir Control', ['U', 'B'], 'Control', 1),
    ('U/B Reanimator', 'Dimir Reanimator', ['U', 'B'], 'Control', 1),
    ('penny dreadful black lifegain', 'Mono Black Lifegain', ['B'], 'Control', 1),
    ('biovisionary pd', 'Biovisionary', ['G', 'U'], 'Control', 1),
    ('mono red ashling aggro', 'Mono Red Ashling Aggro', ['R'], 'Aggro', 1),
    ('penny dreadful esper mill', 'Esper Mill', ['W', 'U', 'B'], 'Unclassified', 1),
    ('penny dreadful gw tokens', 'Selesnya Tokens', ['W', 'G'], 'Aggro-Combo', 1),
    ('Jund', 'Jund Control', ['R', 'G', 'B'], 'Control', 1),
    ('Jund', 'Jund', ['R', 'G', 'B'], None, 1),
    ('RDW', 'Red Deck Wins', ['R'], 'Aggro', 1),
    ('Red Deck Wins', 'Red Deck Wins', ['R'], 'Aggro', 1),
    ('WW', 'White Weenie', ['W'], 'Aggro', 1),
    ('White Weenie', 'White Weenie', ['W'], 'Aggro', 1),
    ('[pd] Mono B Control', 'Mono Black Control', ['B'], 'Control', 1),
    ('BR Control', 'Rakdos Control', ['B', 'R'], 'Control', 1),
    ('b ', 'Mono Black', ['B'], None, 1),
    ('muc', 'Mono Blue Control', ['U'], None, 1),
    ('RDW23', 'Rdw23', ['R'], None, 2),
    ('Mono B Aristocrats III', 'Mono Black Aristocrats v3', ['B'], None, 1),
    ('Mono B Aristocrats IV', 'Mono Black Aristocrats v4', ['B'], None, 1),
    ('Suicide Black', 'Suicide Black', ['B'], None, 1),
    ('Penny Dreadful Sunday RDW', 'Red Deck Wins', ['R'], None, 1),
    ('[Pd][hou] Harvest Quest', 'Harvest Quest', None, None, 1),
    ('Pd_Vehicles', 'Vehicles', None, None, 1),
    ('better red than dead', 'Better Red Than Dead', ['R'], None, 1),
    ('week one rdw', 'Week One Red Deck Wins', ['R'], None, 1),
    ('.ur control', 'Izzet Control', ['U', 'R'], None, 1),
    ('mono g aggro', 'Mono Green Aggro', ['G'], 'Aggro', 1),
    ('monog ramp', 'Mono Green Ramp', ['G'], 'Aggro', 1),
    ('Monogreen Creatures', 'Green Creatures', ['G', 'W'], None, 1),
    ('S6 red Deck Wins', 'Red Deck Wins', ['R'], None, 6),
    ('S6red Deck Wins', 'Red Deck Wins', ['R'], None, 6),
    ('Mono-W Soldiers', 'Mono White Soldiers', ['W'], None, 1),
    ('BWWave', 'BWWave', ['W'], None, 1),
    ('PD - Archfiend Cycling', 'Archfiend Cycling', None, None, 1),
    ('a red deck but not a net deck', 'A Red Deck but Not a Net Deck', None, None, 1),
    ('Better red than dead', 'Better Red Than Dead', None, None, 1),
    ("Is it Izzet or isn't it?", "Is It Izzet or Isn't It?", None, None, 1),
    ('Rise like a golgari', 'Rise Like a Golgari', ['W', 'U', 'B', 'R', 'G'], None, 1),
    ('BIG RED', 'Big Red', None, None, 1),
    ('big Green', 'Big Green', None, None, 1),
    ('Black Power', 'Black Power', ['U', 'B'], None, 1),
    ('PD', 'Mono Green', ['G'], None, 1),
    ('PD', 'Azorius Control', ['U', 'W'], 'Control', 1),
    ('PD', 'Azorius', ['U', 'W'], 'Unclassified', 1),
    ('Bant #Value', 'Bant Yisan-Prophet', ['G', 'U', 'W'], 'Yisan-Prophet', 1),
    ('Yore-Tiller Control', 'WUBR Control', ['W', 'U', 'B', 'R'], 'Control', 1),
    ('Dimir', 'Dimir Control', ['U', 'B'], 'Control', 1),
    ('Basic Red Bitch', 'Basic Red', ['R'], 'Aggro', 1),
    ('black white aristocrats', 'Orzhov Aristocrats', ['B', 'W'], 'Aggro-Combo', 1),
    ('Yore-Tiller Control', 'WUBR Control', ['W', 'U', 'B', 'R'], 'Control', 1),
    ('WUBR Control', 'WUBR Control', ['W', 'U', 'B', 'R'], 'Control', 1),
    ('RBUW Control', 'WUBR Control', ['W', 'U', 'B', 'R'], 'Control', 1),
    ('White Jund', 'White Jund', ['B', 'R', 'G', 'W'], 'White Jund', 1),
    ('White Jund', 'BRGW', ['B', 'R', 'G', 'W'], None, 1),
    ('ゼウスサイクリング', 'ゼウスサイクリング', ['U', 'G', 'B'], 'New Perspectives', 1),
    ('$', '$', ['U', 'B', 'R', 'G'], 'Necrotic Ooze Combo', 1),
    ('White Green', 'Selesnya Aggro', ['W', 'G'], 'Aggro', 1),
    ('White Green', 'Selesnya', ['W', 'G'], None, 1),
    ('RG Energy', 'Gruul Energy', ['R', 'G'], 'Pummeler', 1),
    ('Black/Red', 'Rakdos', ['B', 'R'], None, 1),
    ('Blue Burn', 'Blue Burn', ['U', 'R'], None, 1),
    ('WB', 'Orzhov Aristocrats', ['W', 'B'], 'Orzhov Aristocrats', 1),
    ("Bob's R Us", "Bob's R Us", ['B'], 'Mono Black Aggro', 1),
    ('PD ""Affinity""', '""Affinity""', ['W'], 'Tempered Steel', 1),
    ('PD10 Killer', 'Killer', ['R'], 'Red Deck Wins', 10),
    ('PD-10 Killer', 'Killer', ['R'], 'Red Deck Wins', 10),
    ('PD-10 Killer', 'Killer', ['R'], 'Red Deck Wins', 10),
    ('Deck - Mono Black Aristocrats (1)', 'Mono Black Aristocrats v1', ['B'], 'Mono Black Aristocrats', 1),
    ('PD-GB', 'Golgari the Rock', ['G', 'B'], 'The Rock', 1),
    ('PD 11 WW', 'White Weenie', ['W'], None, 11),
    ('Bad Esper 2.0', 'Bad Esper v2', ['W', 'U', 'B'], 'Esper Control', 1),
    ('BBB', 'BBB', ['B'], 'Zombies', 1),
    ('Manaless Dredge', 'Manaless Dredge', ['B'], 'Graveyard Value', 1),
    ('Deep Anal', 'Deep', ['U'], 'Control', 1),
    ('Supremacia Ariana', 'Mono White', ['W'], None, 1),
    ('Blue Bois', 'Blue Bois', ['U', 'B'], None, 1),
    ('Analog Drake', 'Analog Drake', ['U', 'W'], 'Peregrine Drake', 1),
    ('R Deck Wins', 'Red Deck Wins', ['R'], 'Red Deck Wins', 1),
    ('HAND　DEATH', 'Hand Death', ['B'], 'Mono Black Midrange', 1),
    ('(Penny) Boros Soldiers', 'Boros Soldiers', ['W', 'R'], 'Soldiers', 1),
    ('Red Deck Wins byvci', 'Red Deck Wins Byvci', ['R'], 'Red Deck Wins', 1),
    ('ABZAN - PD', 'Abzan Lifegain Midrange', ['W', 'B', 'G'], 'Lifegain Midrange', 1),
    ('Food - PD', 'Food', ['B', 'R', 'G'], 'Food', 1),
    ('Storm (PD S16)', 'Storm', ['U', 'B'], 'Storm', 16),
    ('Black-Red Midrange', 'Rakdos Midrange', ['R', 'B'], 'Rakdos Midrange', 1),
    ('Happy B DAY Adriana', 'Happy B DAY Adriana', ['W', 'R'], 'AggroSlide', 1),
    ('braids b', 'Braids Black', ['B'], 'Midrange', 1),
    ('[Penny Dreadful] UR Cycling', 'Izzet Cycling', ['U', 'R'], 'Midrange', 1),
    ('Penny-Zombies', 'Zombies', ['B'], 'Zombies', 1),
    ('Something Goes Brrrr', 'Something Goes BRRRR', ['B', 'R'], 'Aggro', 1),
    ('Very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long deck name', 'Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very Very …', ['U'], 'Control', 1),
    ('Boros Weenie', 'Boros Weenie', ['W', 'R'], 'Aggro', 1),
    ('by the power of god and cheap countermagic', 'By the Power of God and Cheap Countermagic', ['U'], 'Trickbind-Dreadnought', 1),
    ("Don't Kill Me T2, Teal Sucks", "Don't Kill Me T2, Teal Sucks", [], 'Combo', 1),
    ('B U R N', 'B U R N', ['R', 'B'], 'Burn', 1),
    ('Elves {PD}', 'Elves', ['G'], 'Elves', 1),
    ('Metalworks pd bond and post', 'Metalworks Bond and Post', ['G'], 'Greenpost', 1),
    ('让我告诉你0.75的故事', '让我告诉你0.75的故事', ['U', 'B'], 'Dimir Control', 1),
    ('Colorless Affinity', 'Colorless Affinity', ['C'], 'Affinity', 1),
    ('Fuck', 'Mono Blue Aggro', ['U'], 'Aggro', 1),
    ('Mono Black Reanimator', 'Mono Black Reanimator', ['B'], 'Mono Black Reanimator', 1),
    ('Mad Cat Lady pd league', 'Mad Cat Lady League', ['B'], 'Aggro', 1),
    ("(NecropolisRegent's) The Emperor Protects", "(NecropolisRegent's) the Emperor Protects", ['B'], 'Control', 1),
    ('Run Like Hell', 'Run Like Hell', ['R'], 'Red Deck Wins', 1),
    ('Weed Has Been Legalized Spiderman', 'Weed Has Been Legalized Spiderman', ['R'], 'Red Deck Wins', 1),
    ('Raiding Dem Hoes', 'Raiding Dem', ['R'], 'Red Deck Wins', 1),
    ('Azorius 8post Control v2', 'Azorius 8post Control v2', ['U', 'W'], 'Azorius Cloudpost Control', 1),
    ('GGreen v2.0', 'GGreen v2', ['G'], 'Mono Green Aggro', 1),
    ('Enchantress VI', 'Enchantress v6', ['W', 'G'], 'Enchantress', 1),
    ('LonisV3', 'Lonis v3', ['U', 'G'], 'Combo', 1),
    ('Izzet Twin V3', 'Izzet Twin v3', ['U', 'R'], 'Izzet Twin', 1),
    ('orzhof pox control 3', 'Orzhof Pox Control v3', ['W', 'B'], 'Pox', 1),
    ('bant resurgent control idea version 3 (forgot a card)', 'Bant Resurgent Control Idea v3 (Forgot a Card)', ['G', 'W', 'U'], 'Bant Control', 1),
    ('Thalia Humans Season 32', 'Thalia Humans', ['W'], 'Humans', 32),
    ('Midnight Mass 3: The Return of the Vampire Who is now Wielding Lightning', 'Midnight Mass 3: The Return of the Vampire Who Is Now Wielding Lightning', ['B'], 'Midnight Mass', 1),
    ('PDS 31 - Storm', 'Storm', ['U', 'B'], 'Dimir Tendrils', 31),
    ('70 Rev 5 3.0 1.2 5', '70 Rev 5 3.0 1.2 5', ['B'], 'Mono Black Vampires', 1),
    ('simic neoform rev 2', 'Simic Neoform v2', ['U', 'G'], 'Combo', 1),
    ('Temur Delver Rev 2.0', 'Temur Delver v2', ['R', 'G', 'U'], 'Aggro-Control', 1),
    ('Vs 1.0', 'Vs v1', ['B'], 'Mono Black Vampires', 1),
    ('Is it 30?', 'Is It 30?', [], '', 1),
    ('lfc 30.1', 'LFC v30.1', [], '', 30),
    ('Shrimp in your face 3.0', 'Shrimp in Your Face v3', [], None, 1),
    ("let's try some 3 color nonsense", "Let's Try Some 3 Color Nonsense", [], None, 3),
    ('Greenpost PD Season 32', 'Greenpost', ['G'], 'Greenpost', 32),
    ('seasons past', 'Seasons Past', ['G'], None, 1),
    ('Mandatory Bantoken deck for the season', 'Mandatory Bantoken Deck for the Season', [], None, 1),
    ('Clerics_season_30', 'Clerics', [], None, 30),
    ('I should try this before the season ends', 'I Should Try This Before the Season Ends', [], None, 1),
    ('S32-MILL', 'Mill', [], None, 32),
    ('Elves-N-Taxes3', 'Elves-N-Taxes3', [], None, 1),
    ('Elves-N-Taxes3', 'Elves-N-Taxes3', [], None, 3),
    ('S32Tezz', 'S32Tezz', [], None, 1),
    ('S32Tezz', 'Tezz', [], None, 32),
    ('0-s31_BW_Yorion', '0 Orzhov Yorion', ['W', 'B'], None, 31),  # I would love to remove 0 here but not right now
    ('PD S31 - Enchant', 'Enchant', [], None, 31),
    ('rdw s30 (PD500)', 'Red Deck Wins', [], None, 30),  # We should possibly NOT be removing '(PD500)' as that's not a season indicator but a tournament indicator
    ('rw heroic s30 (Feather, the Redeemed)', 'Boros Heroic (Feather, the Redeemed)', [], None, 30),
    ('rw legends s30 (Kari Zev, Skyship Raider)', 'Boros Legends (Kari Zev, Skyship Raider)', [], None, 30),
    ('Eggs3', 'Eggs3', [], None, 1),
    ('Eggs3', 'Eggs3', [], None, 3),
    ('Penny Dreadful S3 GW Anti Meta', 'Selesnya Anti Meta', ['W', 'G'], None, 3),
    ("0-Kaya's Revenge II", "0-Kaya's Revenge v2", [], None, 1),  # More 0- that I'd like to strip, but ok
    ('TMNT II: The secret of the ooze', 'TMNT II: The Secret of the Ooze', [], None, 2),
    ('clerks II', 'Clerks II', [], None, 2),
    ('kiiil', 'Kiiil', [], None, 3),
    ('aiii staxx v2', 'Aiii Staxx v2', [], None, 2),
    ('Life Oh Life Ooooooooh Liiiiiiiiife Oh Life', 'Life Oh Life Ooooooooh Liiiiiiiiife Oh Life', [], None, 1),
    ('IIIIIIRRAAAAAA', 'Iiiiiirraaaaaa', [], None, 1),
    ('High Tide Twiiiiiiiin', 'High Tide Twiiiiiiiin', [], None, 1),
    ('Dredge VII', 'Dredge v7', [], None, 1),
    ('Mardu Anvil Garbage.... 2!', 'Mardu Anvil Garbage 2!', [], None, 1),
    ('Blackmass 3.0', 'Blackmass v3', [], None, 1),
    ('Rofellos Ramp Thrun.0', 'Rofellos Ramp Thrun v0', ['G'], None, 1),
    ('Living end... kinda', 'Living End Kinda', [], None, 1),
    ('32. UR_Twin', 'Izzet Twin', ['U', 'R'], 'Izzet Twin', 32),
    ('new version. does no thragtusk make me lose?', 'New Version Does No Thragtusk Make Me Lose?', [], None, 1),
    ('FDSe 1.0', 'FDSe v1', [], None, 1),
    ('Weird Linessa 1.1', 'Weird Linessa v1.1', [], None, 1),
    ('Cloudy Enduring Ideal v1.1', 'Cloudy Enduring Ideal v1.1', [], None, 1),
    ('Cloudy Enduring Ideal V1.1', 'Cloudy Enduring Ideal v1.1', [], None, 1),
    ('Orzhov Tokens 1.1: not even sure if i need the black', 'Orzhov Tokens 1.1: Not Even Sure if I Need the Black', ['W', 'B'], None, 1),
    ('Selesnya Aggro v 1.1', 'Selesnya Aggro v1.1', ['W', 'G'], 'Selesnya Little Kid', 1),
    ('Season 18 Post 1.11.2', 'Post v1.11.2', [], None, 18),
    ('Affinity 1.12', 'Affinity v1.12', [], None, 1),
    ('Green-Mardu Nic Fit v.1.1', 'Green-Mardu Nic Fit v1.1', [], None, 1),
    ('S18 Mono White Hatebears 1.1', 'Mono White Hatebears v1.1', ['W'], None, 18),
    ('Life Gain Mk1.1', 'Life Gain v1.1', [], None, 1),
    ('War of Attrition 1.1 (New Phyrexia)', 'War of Attrition v1.1 (New Phyrexia)', [], None, 1),
    ('Vatmidrange (1.1)', 'Vatmidrange v1.1', [], None, 1),
    ('HellPosts 1.1: Still dies to Red', 'HellPosts v1.1: Still Dies to Red', [], None, 1),
    ('Reanimate...Annihilate 1.1', 'Reanimate Annihilate v1.1', [], None, 1),
    ('Mirror-Mad Ooze V2.1', 'Mirror-Mad Ooze v2.1', [], None, 1),
    ('Abzan Oriss-Lock Traverse Midrange v 2.1', 'Abzan Oriss-Lock Traverse Midrange v2.1', [], None, 1),
    ('Grixis Eldrazi 2.1 (COrrect Lands yay)', 'Grixis Eldrazi v2.1 (COrrect Lands Yay)', [], None, 1),
    ('Count Till 10 V2.1', 'Count Till 10 v2.1', [], None, 1),
    ("Ol' Reliable 2.1, now with Demolition Field", "Ol' Reliable v2.1, Now With Demolition Field", [], None, 1),
    ('2012', '2012', [], None, 1),
    ('Skelly_et_al_v2', 'Skelly Et Al v2', [], None, 1),
    ('Hitting Land Drops Since S16', 'Hitting Land Drops Since S16', [], None, 17),
    ('orz3x3', 'Orz3x3', [], None, 1),
    ('Cawblade4444', 'Cawblade4444', [], None, 1),
    ('basically pd tibalts trickery but way better & consistent - from supergirl-type00', 'Basically Tibalts Trickery but Way Better & Consistent - From Supergirl-Type00', [], None, 1),
    ('1', '1', [], None, 1),
    ('G2', 'G2', [], None, 1),
    ('I Like Spiritmonger Too :3', 'I Like Spiritmonger Too :3', [], None, 1),
    ('alt f6', 'Alt F6', [], None, 1),
    ('Penny Dreadful Allies S2', 'Allies', [], None, 2),
    ('Penny Dreadful Amoeboid Reflection S2', 'Amoeboid Reflection', [], None, 2),
    ('Penny Dreadful 12-Post', '12-Post', [], None, 2),
    ('lordzombie League Deck 1', 'Lordzombie League Deck 1', [], None, 1),
    ('UR Cephalid s2', 'Izzet Cephalid', [], None, 2),
    ('G/B Necrotic Ooze V2', 'Golgari Necrotic Ooze v2', [], None, 2),
    ('Worldgorger Dragon Combo 2', 'Worldgorger Dragon Combo v2', [], None, 2),
    ('Penny Dreadful Warp World (S2)', 'Warp World', [], None, 2),
    ('PD VIOLENT JUND 2.0', 'Violent Jund v2', [], None, 2),
    ('Pd 8 - strange oils', 'Strange Oils', [], None, 8),
    ('UW Counter Ghazi (18)', 'Azorius Counter Ghazi v18', [], None, 8),
    ('Havoc is an 18¢ card :/', 'Havoc Is an 18¢ Card :/', [], None, 8),
    ('PD31', 'Abzan Midrange', ['W', 'B', 'G'], 'Abzan Midrange', 31),
    ('1231', '1231', ['W', 'B'], 'Orzhov Control', 31),
    ('Equipment s32 2', 'Equipment v2', [], None, 32),
    ('S22 Cadaverslide-V26', 'Cadaverslide-v26', [], None, 22),
    ('PD season 2 werewolf stompy', 'Werewolf Stompy', [], None, 2),
    ('Pet t2 Deck', 'Pet T2 Deck', [], None, 2),
    ('[PD2] Big Blue', 'Big Blue', [], None, 2),
    ('RB Madness rev2', 'Rakdos Madness v2', [], None, 2),
    ('12-Rack', '12-Rack', [], None, 2),
    ('31. Yorion Fires', 'Yorion Fires', [], None, 31),
    ('GreenStompy PD31', 'GreenStompy', [], None, 31),
    ('Enchantress v31.3.0', 'Enchantress v31.3', [], None, 31),
    ('Enchantress v31.3.1', 'Enchantress v31.3.1', [], None, 31),
    ('druelf-s31 (1)', 'Druelf v1', [], None, 31),
    ('PD_S31_Fires', 'Fires', [], None, 31),
    ('[S31] PD500 Colossus', 'Colossus', [], None, 31),
    ('s31-tempted-by-the-ring-20231202-175217', 'Tempted-by-the-Ring-20231202-175217', [], None, 31),
    ('Izzet Trashburn Ver9.0', 'Izzet Trashburn v9', [], None, 1),
    ('Comblins18.0 S18', 'Comblins18.0', [], None, 18),
    ('PD_RG_Warriors_20.01', 'Gruul Warriors v20.01', [], None, 20),
    ('23.05.6 (S23)', '23.05.6', [], None, 23),
    ('Storm PD S06', 'Storm S06', [], None, 6),
    ('RBG_S7', 'Jund', ['R', 'G', 'B'], None, 7),
    ('26. Izzet terror', 'Izzet Terror', ['U', 'R'], None, 26),
    ('31. Boros_Legends', 'Boros Legends', ['W', 'R'], None, 31),
    ('0-32. boros equipment', '0- Boros Equipment', ['W', 'R'], None, 32),
    ('32. UR_Twin', 'Izzet Twin', ['U', 'R'], 'Izzet Twin', 32),
    ('1,2,3 10', '1,2,3 10', [], None, 1),
    ('fires of 2001', 'Fires of 2001', [], None, 10),
    ('elves v12.30', 'Elves v12.30', [], None, 10),
    ('2 combos are better then 1', '2 Combos Are Better Then 1', [], None, 11),
    ('31% edv 23% upro 23% avuv 15% vxus 8% aves', '31% Edv 23% Upro 23% Avuv 15% Vxus 8% Aves', [], None, 12),
    ('opps 500', 'Opps 500', [], None, 13),
    ('mono White heroic 25 8', 'Mono White Heroic v8', ['W'], None, 25),
    ('netdecking: day 1', 'Netdecking: Day 1', [], None, 14),
    ('life is ez 140', 'Life Is Ez 140', [], None, 16),
    ('version 2', 'v2', ['U'], 'Mono Blue Aggro', 17),
    ('probably tier 3', 'Probably Tier 3', [], None, 18),
    ('philadelphia 2011', 'Philadelphia 2011', [], None, 19),
    ('project 121', 'Project 121', [], None, 20),
    ("rat tribal and i don't care about going 0 - 5", "Rat Tribal and I Don't Care About Going 0 - 5", [], None, 21),
    ('dacbassio special (2) (2)', 'Dacbassio Special v2.2', [], None, 22),
    ('elves 12.30', 'Elves 12.30', [], None, 23),
    ('chickeninthebrain 4 pioneer 2022', 'Chickeninthebrain 4 Pioneer 2022', [], None, 24),
    ('hyper-cascade-v5-for-nuutz', 'Hyper-Cascade-v5-for-Nuutz', [], None, 25),
    ("shouldn't be turn 1", "Shouldn't Be Turn 1", [], None, 26),
    ('Boros cycling 9.24.22', 'Boros Cycling v9.24.22', [], None, 27),
    ('sigil by zuukrifkodaav 2022-10-23', 'Sigil by Zuukrifkodaav 2022-10-23', [], None, 28),
    ('buddy holly from the weezer album weezer (1994)', 'Buddy Holly From the Weezer Album Weezer 1994', [], None, 29),
    ('counting to 10', 'Counting to 10', [], None, 30),
    ('1 over 2 to the n', '1 Over 2 to the N', [], None, 31),
    ('just because the best cards cost 6 doesnt mean its not 5', 'Just Because the Best Cards Cost 6 Doesnt Mean Its Not 5', [], None, 32),
    ('Azorius stax-naught (3) (2)', 'Azorius Stax-Naught v3.2', [], None, 1),
    ('some flying squirrels can grow to be up to 3.9 ft (119cm) long', 'Some Flying Squirrels Can Grow to Be Up to 3.9 Ft (119cm) Long', [], None, 2),
    ('count till 10 v2.0', 'Count Till 10 v2', [], None, 3),
    ('explore citadel v2(w/ a sideboard this time)', 'Explore Citadel v2(w/ a Sideboard This Time)', [], None, 4),
    ('count till 10', 'Count Till 10', [], None, 5),
    ('depravity 500', 'Depravity 500', [], None, 6),
    ('catch 22', 'Catch 22', [], None, 22),
    ('the 0.02 tix printing of kaya was finally available', 'The 0.02 Tix Printing of Kaya Was Finally Available', [], None, 23),
    ('crackling drake beatdown 1.3 3', 'Crackling Drake Beatdown v1.3.3', [], None, 23),
    ('70 rev 5 2.0', '70 Rev 5 2.0', [], None, 23),
    ('significantly worse 3 drops than season 19', 'Significantly Worse 3 Drops Than Season 19', [], None, 23),
    ('dr who: season 3, episode 10', 'Dr Who: Season 3, Episode 10', [], None, 23),
    ("xigotdeadx's oni but i'm not paying 0.15 tix for concealing curtains", "Xigotdeadx's Oni but I'm Not Paying 0.15 Tix for Concealing Curtains", [], None, 23),
    ('让我告诉你0.75的故事', '让我告诉你0.75的故事', [], None, 23),
    ('0.75的故事开始', '0.75的故事开始', [], None, 23),
    ('我看过这个电影，0.75不好的吗？', '我看过这个电影，0.75不好的吗？', [], None, 23),
    ('0.75我看过这个电影', '0.75我看过这个电影', [], None, 23),
    ('0.75, more like 0', '0.75, More Like 0', [], None, 23),
    ("wait, this isn't season 22", "Wait, This Isn't Season 22", [], None, 23),
    ("wait, this isn't $eason 22", "Wait, This Isn't $Eason 22", [], None, 23),
    ('count to 10', 'Count to 10', [], None, 23),
    ('Red deck wins 3.4.22', 'Red Deck Wins v3.4.22', [], None, 23),
    ('count to 20', 'Count to 20', [], None, 23),
    ('delver🚮 (v2)', 'Delver🚮 v2', [], None, 23),
    ('librarians', 'Librarians', ['U'], 'Mono Blue Librarians', 32),
    ('trying to fit in', 'Trying to Fit In', ['U', 'R'], 'Izzet Twin', 32),
    ('Blue Man Group', 'Blue Man Group', [], None, 32),
    ('#JustNayaThings', '#JustNayaThings', [], None, 32),
    ('Blue Burn', 'Blue Burn', [], None, 32),
    ('S15 is a meme', 'S15 Is a Meme', [], None, 32),
    ('GG Con', 'GG Con', [], None, 32),
    ('I WILL Make Combo Work In Season 15', 'I WILL Make Combo Work in Season 15', [], None, 15),
    ('Rakdos aggro but with green instead of black', 'Rakdos Aggro but With Green Instead of Black', [], None, 32),
    ('Blue Dreadnought + More Red Hate', 'Blue Dreadnought + More Red Hate', [], None, 32),
    ('UB or not UB? That is the Question', 'UB or Not UB? That Is the Question', [], None, 32),
    ('R E A N I M A T O R', 'R E A N I M A T O R', [], None, 32),
    ('Meme deck for #general', 'Meme Deck for #general', [], None, 32),
    ('black and green', 'Black and Green', [], None, 32),
    ('Fix the gargadon bug me angy', 'Fix the Gargadon Bug Me Angy', [], None, 32),
    ('The World Is So Black And White Nowadays', 'The World Is So Black and White Nowadays', [], None, 32),
    ('red and black jank', 'Red and Black Jank', [], None, 32),
    ('blue man group', 'Blue Man Group', ['U'], None, 32),
    ('No Green Jeskai Ascendancy', 'No Green Jeskai Ascendancy', ['W', 'U', 'R'], 'Jeskai Jeskai Ascendancy', 32),
    ('GREEN JESKAI COMBO S8 Ver1.0', 'RGWU COMBO v1', ['G', 'W', 'U', 'R'], 'Four Color Jeskai Ascendancy', 8),
    ('white weenie', 'White Weenie', ['W'], 'White Weenie', 32),
    ('Teaching mystical erections', 'Teaching Mystical', ['U', 'B'], 'Dimir Control', 32),
    ('Teaching Mystical Erections', 'Teaching Mystical', ['U', 'B'], 'Dimir Control', 32),
    ('Kiki-Titi', 'Kiki-Titi', ['U', 'R'], 'Izzet Twin', 32),
    ('Greasefag', 'Orzhov Greasefang', ['W', 'B'], 'Greasefang', 33),
    ('🏴‍☠️', '🏴‍☠️', ['U', 'R'], 'Pirates', 33),
    ('S36 Human v1 1', 'Human v1.1', ['W'], 'Mono White Humans', 36),
    ('Blue', 'Mono Blue Tempo', ['U'], 'Mono Blue Tempo', 37),
    ('U BLUE', 'Mono Blue Tempo', ['U'], 'Mono Blue Tempo', 37),
    ('Blue-Red Uber-Control', 'Izzet Uber-Control', ['U', 'R'], 'Izzet Control', 37),
]

def test_replace_space_alternatives() -> None:
    assert deck_name.replace_space_alternatives('3.1.2') == '3.1.2'
    assert deck_name.replace_space_alternatives('A.very_silly_name 2.6') == 'A very silly name 2.6'

def test_remove_season() -> None:
    assert deck_name.remove_season('GreenStompy 31', 31) == 'GreenStompy'
    assert deck_name.remove_season('GreenStompy 31', 32) == 'GreenStompy 31'
    assert deck_name.remove_season('PD Artifacts 31', 31) == 'PD Artifacts'
    assert deck_name.remove_season('PD Artifacts 31', 32) == 'PD Artifacts 31'
    assert deck_name.remove_season('PD S31 Fires', 31) == 'PD Fires'
    assert deck_name.remove_season('PD S31 Fires', 32) == 'PD S31 Fires'
    assert deck_name.remove_season('31 - Storm', 31) == '- Storm'
    assert deck_name.remove_season('31 - Storm', 32) == '31 - Storm'

def test_remove_pd() -> None:
    assert deck_name.remove_pd('[PD2] Big Blue', 2) == 'Big Blue'
    assert deck_name.remove_pd('Red Deck Wins (PD500)', 1) == 'Red Deck Wins'
    assert deck_name.remove_pd('Penny Dreadful Knights', 1) == 'Knights'
    assert deck_name.remove_pd('biovisionary pd', 1) == 'biovisionary'
    assert deck_name.remove_pd('[PD] Mono Black Control', 1) == 'Mono Black Control'
    assert deck_name.remove_pd('(Penny) Boros Soliders', 1) == 'Boros Soliders'
    assert deck_name.remove_pd('Metalworks pd bond and post', 1) == 'Metalworks  bond and post'  # The double space is dealt with elsewhere

def test_normalize_version() -> None:
    assert deck_name.normalize_version('Mono Black Aristocrats (1)') == 'Mono Black Aristocrats v1'
    assert deck_name.normalize_version('Mono Black Aristocrats (1) (2)') == 'Mono Black Aristocrats v1.2'
    assert deck_name.normalize_version('Mono Black Aristocrats 20.01') == 'Mono Black Aristocrats v20.01'

def test_remove_semver_trailing_zeroes() -> None:
    assert deck_name.remove_semver_trailing_zeroes('0.1.1') == '0.1.1'
    assert deck_name.remove_semver_trailing_zeroes('9.0') == '9'
    assert deck_name.remove_semver_trailing_zeroes('1.0.2.0.1.1.0') == '1.0.2.0.1.1'
    assert deck_name.remove_semver_trailing_zeroes('1.0.2.0.0.0.0') == '1.0.2'

def test_lowercase_version_marker() -> None:
    assert deck_name.lowercase_version_marker('Red Deck Wins V1') == 'Red Deck Wins v1'
    assert deck_name.lowercase_version_marker('Red Deck Wins v1') == 'Red Deck Wins v1'
    assert deck_name.lowercase_version_marker('Red Deck Wins Victory') == 'Red Deck Wins Victory'

def test_parse_roman_sloppily() -> None:
    assert deck_name.parse_roman_sloppily('XVIIX') == 13
    assert deck_name.parse_roman_sloppily('vii') == 7
    assert deck_name.parse_roman_sloppily('xivii') == 16

def test_invalid_color() -> None:
    d = Container({'original_name': 'PD',
                   'archetype_name': 'Control',
                   'colors': ['U', 'X'],
                   'season_id': 1})
    with pytest.raises(InvalidDataException):
        deck_name.normalize(d)

def test_canonicalize_colors() -> None:
    assert deck_name.canonicalize_colors([]) == set()
    assert deck_name.canonicalize_colors(['White', 'Black', 'Orzhov', 'Abzan']) == {'B', 'G', 'W'}
    assert deck_name.canonicalize_colors(['White', 'White', 'White']) == {'W'}

def test_normalize_colors() -> None:
    assert deck_name.normalize_colors('Braids B', ['B']) == 'Braids Black'

@pytest.mark.parametrize('original_name,expected,colors,archetype_name,season_id', TESTDATA)
def test_normalize(original_name: str, expected: str, colors: list[str], archetype_name: str, season_id: int) -> None:
    d = Container({'original_name': original_name,
                   'archetype_name': archetype_name,
                   'colors': colors or [],
                   'season_id': season_id})
    assert deck_name.normalize(d) == expected
